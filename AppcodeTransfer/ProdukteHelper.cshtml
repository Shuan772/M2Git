@using MySql.Data.MySqlClient
@using System.Configuration;

@helper ProdukteGallery()
{

MySqlConnection con = null;



try
{
    using (con = new MySqlConnection(ConfigurationManager.ConnectionStrings["connstring"].ConnectionString)) {
        //MySqlConnection con = new MySqlConnection("Server=localhost;Port=3306;Database=test;Uid=root;Pwd=datenbank;");

        // hier öffnen Sie die Verbindung zu, DBMS
        con.Open();
        int zaehler = 1;
        bool vege = false;
        bool vega = false;
        string query, querykat;
        string urlbez = Request.QueryString["bez"];
        string urlvor = Request.QueryString["vor"];
        string urlvege = Request.QueryString["vege"];
        string urlvega = Request.QueryString["vega"];
        string querystart = "";
        string queryjoin = "";
        string queryend = "";
        string ueberschrift = "";

        query = "SELECT DISTINCT mahl.ID, mahl.Vorrat , mahl.Name , bild.`Alt-Text` , bild.`titel` , bild.`Binärdaten` From Mahlzeiten mahl JOIN MahlzeitenXBilder mxb ON mahl.ID = mxb.Mahlzeiten JOIN Bilder bild ON bild.ID = mxb.Bilder";

        if (urlbez != null && urlbez != "0")
        {
            querystart = querystart + " Join Kategorien kat on mahl.Kategorie ='" + urlbez + "'"; //ID = Bezeichnung
        }
        if (urlvor == "1")
        {
            queryjoin = queryjoin + " WHERE mahl.Vorrat > '0'"; //ID = Bezeichnung
        }
        if (urlvege == "1")
        {
            if (queryjoin == "")
            {
                queryjoin = queryjoin + " WHERE NOT EXISTS (Select * FROM zutaten z Join zutatenxmahlzeiten x on z.ID = x.Zutaten where (z.vegetarisch = 0 ";
            }
            else
            {
                queryjoin = queryjoin + "AND NOT EXISTS (Select * FROM zutaten z Join zutatenxmahlzeiten x on z.ID = x.Zutaten where (z.vegetarisch = 0 ";
            }
            vege = true;
        }
        if (urlvega == "1")
        {
            if (queryjoin == "")
            {
                queryjoin = queryjoin + "  WHERE NOT EXISTS (Select * FROM zutaten z Join zutatenxmahlzeiten x on z.ID = x.Zutaten where (z.vegan = 0 ";
            }
            else if(vege)
            {
                queryjoin = queryjoin + " OR  z.vegan = 0 ";
            }else
            {
                queryjoin = queryjoin + " AND NOT EXISTS (Select * FROm zutaten z Join zutatenxmahlzeiten x on z.ID = x.Zutaten where (z.vegan = 0 ";
            }
            vega = true;
        }
        if(vega || vege)
        {
            queryend = ") AND x.Mahlzeiten = mahl.ID) ";
        }
        query = query + querystart + queryjoin + queryend + ";";


        querykat = "SELECT ID,Bezeichnung,Kategorie FROM Kategorien";

        MySqlCommand commandkat = new MySqlCommand(querykat, con);
        MySqlDataReader readerkat = commandkat.ExecuteReader();

        List<string> bezeichnung = new List<string>();
        List<string> ids = new List<string>();
        List<string> kategorien = new List<string>();

        while (readerkat.Read())
        {
            ids.Add(readerkat["id"].ToString());
            bezeichnung.Add(readerkat["bezeichnung"].ToString());
            if (readerkat["kategorie"].ToString() == "")
            {
                kategorien.Add("0");
            }
            else {
                kategorien.Add(readerkat["kategorie"].ToString());
            }
        }

        <div class="col-4">
            <form method="get" action="/M2Git/Produkte.cshtml">
                <fieldset class="border align-content-center">
                    <legend class="scheduler-border">Speisenliste filtern</legend>
                    <div class="container center_div">

                        <select name="bez">
                            <optgroup label="Generell">
                                <option value="0">Alle zeigen</option>
                            </optgroup>

                            @foreach (string id in ids)
                            {
                            int pos = ids.IndexOf(id);
                            var mybezeichnung = bezeichnung.ElementAt(pos);
                            var myid = ids.ElementAt(pos);
                            var kategorie = kategorien.ElementAt(pos);


                            if (kategorie == "0")
                            {

                            <optgroup label="@mybezeichnung">

                                @foreach (string id2 in ids)
                                {
                                    int pos2 = ids.IndexOf(id2);
                                    var kategorie2 = kategorien.ElementAt(pos2);

                                    if (kategorie2 == myid)
                                    {

                                        var mybezeichnung2 = bezeichnung.ElementAt(pos2);
                                        var myid2 = ids.ElementAt(pos2);
                                        if (urlbez== myid2)
                                        {
                                            <option value="@myid2" selected="selected">@mybezeichnung2</option>
                                            ueberschrift = mybezeichnung2;
                                        }
                                        else
                                        {
                                            <option value="@myid2">@mybezeichnung2</option>
                                        }

                                    }
                                }
                            </optgroup>
                            }
                            }

                        </select>
                        <br>
                        @{
                            con.Close();
                        }
                        @{ 
                        if (urlvor == "1")
                        {
                        <p><input type="checkbox" value="1" name="vor" checked> nur verfügbare<br></p>
                            }
                            else
                            {
                                <p><input type="checkbox" value="1" name="vor"> nur verfügbare<br></p>
                            }

                            if (urlvege == "1")
                            {
                                <p><input type="checkbox" value="1" name="vege" checked> nur vegetarische<br></p>
                            }
                            else
                            {
                                <p><input type="checkbox" value="1" name="vege"> nur vegetarische<br></p>
                            }

                            if (urlvega == "1")
                            {
                                <p><input type="checkbox" value="1" name="vega" checked> nur vegane<br></p>
                            }
                            else
                            {
                                <p><input type="checkbox" value="1" name="vega"> nur vegane<br></p>
                            }
                        }
                        
                        
                        <button type="submit">Speisen Filtern</button>
                        </div>
                </fieldset>
            </form>
        </div>
        <div class="col-8">
            @if (ueberschrift == "")
            {
                <h2>Verfügbare Speisen</h2>
            }
            else
            {
                <h2>Verfügbare Speisen (@ueberschrift) </h2>
            }
            
                @{ con.Open();
                    MySqlCommand command = new MySqlCommand(query, con);
MySqlDataReader reader = command.ExecuteReader();
                    //
                }

            <!--while (reader.HasRows)-->
            @{
                for (int i = 0; i < 10; i++)
                {
                    <div class="row">
                        @while (reader.Read())
                        {
                            @ProduktKarte(reader)
                            zaehler++;

                            if (zaehler % 4 == 1)
                            {
                                break;
                            }
                        }
                    </div>
                }
            }

                        @{
                            con.Close();
                        }

                    </div>
                            }


            }
                    catch (Exception ex)
                    {
                        
                        if (con != null)
                        {
                            con.Close();
                        }

                        <p class="danger">
                            <br />@ex.Message
                        </p>
                    }
}

@helper ProduktKarte(MySqlDataReader reader)
{

var base64 = Convert.ToBase64String((byte[])reader["Binärdaten"]);
var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    <div class="card">
        @{
            int x = Convert.ToInt32(reader["Vorrat"]);

            
                if (x >= 1)
                {
                    <img class="card-img-top card-product-display" src="@imgSrc" alt="@reader["Alt-text"]">
                    <div class="card-body">
                        <h5 class="card-title">@reader["Name"]</h5>
                        <a Href="/M2Git/Detail.cshtml?id=@reader["ID"]" class="btn btn-primary"><u>Details</u></a>
                    </div>
                }
                else
                {
                    <img class="card-product-display desaturate" src="@imgSrc" alt="@reader["Alt-text"]">
                    <div class="card-body">
                        <h5 class="card-title">@reader["Name"]</h5>
                        <a>Nicht verfügbar</a>
                    </div>
                }

        }
    </div>
}