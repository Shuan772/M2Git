@using MySql.Data.MySqlClient
@using System.Configuration;
@helper LoginIndex()
{

try
{
    if (Request.Form["logout"] == "1")
    {
        Session.Remove("User"); // Diese Daten sollen aus
        Session.Remove("Role"); // der Datenbank kommen
    }

    if (string.IsNullOrEmpty(Session["User"] as string))
    {
        if (Request.Form["name"] != "" && Request.Form["password"] != "" && Request.Form["name"] != null && Request.Form["password"] != null)
        {
            MySqlConnection con = null;
            try
            {

                con = new MySqlConnection(ConfigurationManager.ConnectionStrings["connstring"].ConnectionString);
                var name = Request.Form["name"];
                var pw = Request.Form["password"];
                string query = "SELECT be.Nummer ,be.`hash` , be.`Salt` , be.`Nutzername` , be.`ISA` FROM benutzer be WHERE be.`Nutzername` ='" + name + "' ;";
                con.Open();
                MySqlCommand command = new MySqlCommand(query, con);
                MySqlDataReader reader = command.ExecuteReader();
                reader.Read();
                if (reader.HasRows)
                {
                    string teststring = "sha1: 64000:18:" + reader["salt"].ToString() + ":" + reader["hash"].ToString();


                    //string result = PasswordSecurity.PasswordStorage.CreateHash(reader["salt"].ToString() + Request.Form["password"]);

                    bool testhash = PasswordSecurity.PasswordStorage.VerifyPassword(Request.Form["password"], "sha1:64000:18:" + reader["salt"].ToString() + ":" + reader["hash"].ToString());
                    string nummer = reader["Nutzername"].ToString();
                    string isa = reader["ISA"].ToString();
                    con.Close();

                    if (testhash)
                    {
                        Session["User"] = nummer;
                        Session["Role"] = isa;
                @TrueLogin()
                        }
                        else
                        {
                    @FalseLogin(Request.Form["name"], Request.Form["password"])
                        }
                    }
                    else
                    {
                        @FalseLogin(Request.Form["name"], Request.Form["password"])
                    }
                }
                catch (Exception ex)
                {
                    if (con != null)
                    {
                        con.Close();
                    }
                <p> @ex </p>
                }

            }
            else
            {
                @NOLogin()
            }
        }
        else
        {
            @TrueLogin()
    }

}
catch (Exception ex)
{
        <p>@ex</p>
}
}
@helper NOLogin()
{
 
        <div class="col-6">
            <form action="~/M2Git/Login.cshtml" method="post">
                <fieldset class="border align-content-center">
                    <legend class="scheduler-border">Login</legend>
                    <div>
                        <label for="name">Name:</label>
                        <input type="text" name="name" placeholder="Benutzer" required title="Min 1" class="form-control">
                        <label for="password">Password:</label>
                        <input type="password" name="password" placeholder="password" required title="Min 1" class="form-control">
                        <button type="submit" class="form-control">Anmelden</button>
                    </div>
                </fieldset>
            </form>
        </div>

}

@helper FalseLogin(string altname,string altpw)
{
    <p><font color="red">Daten sind Falsch</font></p>
    <div class="col-6">
        <form action="~/M2Git/Login.cshtml" method="post">
            <fieldset class="border align-content-center">
                <legend class="scheduler-border">Login</legend>
                <div>
                    <label for="name" class="dangerlabel">Name:</label>
                    <input value=@altname type="text" name="name" placeholder="Benutzer" required title="Min 1" class="form-control dangerinput">
                    <label for="password" class="dangerlabel">Password:</label>
                    <input value=@altpw type="password" name="password" placeholder="password" required title="Min 1" class="form-control dangerinput">
                    <button type="submit" class="form-control">Anmelden</button>
                </div>
            </fieldset>
        </form>
    </div>

}

@helper TrueLogin()
{
    <p>Hallo @Session["user"], Sie sind angemeldet als @Session["role"]</p>
    <form action="~/M2Git/Login.cshtml" method="post">
        <input type="hidden" name="logout" value="1" />
        <button type="submit" class="form-control logoutbutton">Abmelden</button>
    </form>

}