
4.2 Login
Legen Sie die SQL-Query zum Ermitteln der Rolle für einen
bestimmten Benutzer als View [5] oder StoredProcedure [6][7] an.


[6] Stored Procedures in MariaDB
https://mariadb.com/kb/en/library/stored-procedure-overview/
[7] Stored Procedures in C#/MySql.Data aufrufen
https://dev.mysql.com/doc/connector-net/en/connector-net-programming-stored-using.html

Testen Sie die Query zuvor in HeidiSQL und verfeinern Sie sie
dahingehend, dass Ihre Anwendung nur noch die Rolle erfragt.

Da es um einen Benutzer und genau eine Rolle geht, nutzen Sie
ExecuteScalar bzw. ExecuteNonQuery und lassen sich den Rollenwert
direkt zurückgeben.
Beispiel:
• Meldet sich ein Student mit der Nummer 8 an, könnte die View
bereits "Student" zurückgeben.
• Meldet sich ein Mitarbeiter mit der Nummer 23 an, könnte die View
direkt "Mitarbeiter" zurückgeben.
SELECT Rolle FROM Nutzerrolle WHERE Nummer = 8;
 "Student"

Beschreiben Sie im Dossier, …
… weshalb Sie plötzlich einen Cookie gesetzt bekommen nachdem Sie Werte
in die Session schreiben. Lassen Sie sich den Cookie einmal anzeigen im
Browser (Entwickler-Tools).
Erklären Sie die Situation auf Serverseite, wenn Sie den Cookie löschen und
einen weiteren Request absenden.
Recherchieren Sie, wie eine Anmeldung auch ohne Verwendung von Cookies
realisiert werden könnte.
Notieren Sie, wie die Stored Procedure aussieht, die Ihnen den korrekten
Preis zu einer genannten Nutzer-Nummer und einer Mahlzeiten-ID zurückgibt.
(oder verwenden Sie sie direkt in der Anwendung)
Beschreiben Sie, was die Information sha1:64000:18 zu Beginn eines HashStrings
(siehe nächste Folie) transportiert und wie diese Angaben sich auf Salt
und Hash auswirken. 
